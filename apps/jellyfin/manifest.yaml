apiVersion: v1
kind: Namespace
metadata:
  name: jellyfin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-config-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-cache-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jellyfin-media-pvc
  namespace: jellyfin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      containers:
      - name: jellyfin
        image: ghcr.io/linuxserver/jellyfin:latest
        imagePullPolicy: Always
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: "America/Montreal"
        - name: JELLYFIN_PublishedServerUrl
          value: "https://tv.jg1g.com"
        ports:
        - containerPort: 8096
          name: http
          protocol: TCP
        - containerPort: 8920
          name: https
          protocol: TCP
        - containerPort: 1900
          name: dlna
          protocol: UDP
        - containerPort: 7359
          name: discovery
          protocol: UDP
        volumeMounts:
        - name: config
          mountPath: /config
        - name: cache
          mountPath: /cache
        - name: media
          mountPath: /media
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8096
          initialDelaySeconds: 30
          periodSeconds: 15
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jellyfin-config-pvc
      - name: cache
        persistentVolumeClaim:
          claimName: jellyfin-cache-pvc
      - name: media
        persistentVolumeClaim:
          claimName: jellyfin-media-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin-service
  namespace: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
  - name: http
    port: 8096
    targetPort: 8096
    protocol: TCP
  - name: https
    port: 8920
    targetPort: 8920
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin-ingress
  namespace: jellyfin
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - tv.jg1g.com
    secretName: jellyfin-tls
  rules:
  - host: tv.jg1g.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin-service
            port:
              number: 8096
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: jellyfin-tls
  namespace: jellyfin
spec:
  secretName: jellyfin-tls
  issuerRef:
    name: letsencrypt-dns
    kind: ClusterIssuer
  dnsNames:
  - tv.jg1g.com