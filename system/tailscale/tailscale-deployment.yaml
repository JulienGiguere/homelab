apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-subnet-router
  namespace: tailscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale-subnet-router
  template:
    metadata:
      labels:
        app: tailscale-subnet-router
    spec:
      serviceAccountName: tailscale-subnet-router
      initContainers:
      - name: sysctler
        image: busybox
        securityContext:
          privileged: true
        command: ["/bin/sh"]
        args:
          - -c
          - sysctl -w net.ipv4.ip_forward=1 net.ipv6.conf.all.forwarding=1
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
      containers:
      - name: tailscale
        imagePullPolicy: Always
        image: tailscale/tailscale:latest
        env:
        - name: TS_KUBE_SECRET
          value: tailscale-state
        - name: TS_USERSPACE
          value: "false"
        - name: TS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: tailscale-auth
              key: authkey
        - name: TS_ROUTES
          value: "10.42.0.0/16,10.43.0.0/16"
        - name: TS_HOSTNAME
          value: "k3s-cluster"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        resources:
          requests:
            cpu: 500m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 100Mi
      - name: nginx-proxy
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          requests:
            cpu: 50m
            memory: 32Mi
          limits:
            cpu: 100m
            memory: 64Mi
      volumes:
      - name: nginx-config
        configMap:
          name: tailscale-proxy-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tailscale-proxy-config
  namespace: tailscale
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    http {
        upstream argocd {
            server 10.43.61.158:443;
        }
        server {
            listen 80;
            server_name _;
            
            # Root path redirects to ArgoCD
            location / {
                proxy_pass http://argocd;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }